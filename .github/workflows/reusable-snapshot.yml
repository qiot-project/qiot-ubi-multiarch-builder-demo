name: Reusable Nightly Build (from Develop branch)

on:
  workflow_call:
    # In the reusable workflow, 
    # use the inputs and secrets keywords 
    # to define inputs or secrets that will be 
    # passed from a caller workflow.
    inputs:
      JVM:
        required: false
        type: boolean
    secrets:
      ARTIFACTORY_USERNAME:
        required: true
      ARTIFACTORY_TOKEN:
        required: true
      QUAY_USERNAME:
        required: true
      QUAY_PASSWORD:
        required: true


# In the reusable workflow, 
# reference the input or secret that you defined in the "on" key in the previous step. 
# If the secrets are inherited using "secrets: inherit", 
# you can reference them even if they are not defined in the on key.
jobs:
  reusable-snapshot:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Setup Maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v18
        with:
          servers: |
            [
              {
                "id": "qiot-central",
                "username": "${env.ARTIFACTORY_USERNAME_REF}",
                "password": "${env.ARTIFACTORY_TOKEN_REF}"
              },
              {
                "id": "qiot-snapshots",
                "username": "${env.ARTIFACTORY_USERNAME_REF}",
                "password": "${env.ARTIFACTORY_TOKEN_REF}"
              }
            ]
#      - name: Build with Maven
#        env:
#           ARTIFACTORY_USERNAME_REF: ${{ secrets.ARTIFACTORY_USERNAME }}
#           ARTIFACTORY_TOKEN_REF: ${{ secrets.ARTIFACTORY_TOKEN }}
#        run: ./mvnw package -B -Pprod,native
#      - name: Push Image
#        run: |
#          ./mvnw -B -Pdevelop,native oc:build oc:push                           \
#          -Djkube.docker.push.username=${{ secrets.QUAY_USERNAME }}      \
#           -Djkube.docker.push.password=${{ secrets.QUAY_PASSWORD }}
      - name: Build and push JVM
        if: ${{ inputs.JVM }}
        run: ./mvnw -B clean package -Pprod oc:build oc:push -Djkube.docker.push.username=${{ secrets.QUAY_USERNAME }} -Djkube.docker.push.password=${{ secrets.QUAY_PASSWORD }} 
      - name: Build and push NATIVE
        if: ${{ !inputs.JVM }}
        run: ./mvnw -B clean package -Pprod,native oc:build oc:push -Dquarkus.native.container-build=true -Dquarkus.container-image.build=true -Djkube.docker.push.username=${{ secrets.QUAY_USERNAME }} -Djkube.docker.push.password=${{ secrets.QUAY_PASSWORD }} 
        